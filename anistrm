#!/usr/bin/env python
# PYTHON_ARGCOMPLETE_OK

"""
A personal script to mpv an anime episode.

Required environment variables:
    `ANISTRM_URL`: The base URL to search from
    `ANISTRM_EXT`: The extension of expected videos
"""

import re
import requests
from sys import exit
from os import environ
from subprocess import call
from BeautifulSoup import BeautifulSoup
from urlparse import urljoin
from fuzzywuzzy import fuzz, process
from argparse import ArgumentParser, RawDescriptionHelpFormatter
from argcomplete import autocomplete

END = '\033[0m'

nums = re.compile(r'\b0+(\d)')
normalize = lambda s: nums.sub(r'\1', s)
red = lambda s: '\033[31m{}{}'.format(s, END)
green = lambda s: '\033[32m{}{}'.format(s,END)
yellow = lambda s: '\033[33m{}{}'.format(s, END)
def exit_with(s):
    print('{}\n'.format(red(s)))
    exit(1)

parser = ArgumentParser(description=__doc__,
                        formatter_class=RawDescriptionHelpFormatter)
parser.add_argument('--program',
                    help="program to use on the link",
                    nargs='?',
                    default='mpv',
                    type=str)
parser.add_argument('search_terms',
                    help="anime series + episode number",
                    nargs='+',
                    type=str)
autocomplete(parser)
args = parser.parse_args()
program = args.program.split(' ')
search_terms = normalize(' '.join(args.search_terms))

try:
    base = environ['ANISTRM_URL']
    ext = environ['ANISTRM_EXT']
except KeyError:
    exit_with("You need ANISTRM_URL and ANISTRM_EXT.")

link = base
while not link.endswith(ext):
    print('-> {}'.format(link))

    try:
        req = requests.get(link)
    except requests.exceptions.ConnectionError:
        exit_with("Could not reach \"{}\".".format(link))

    links = BeautifulSoup(req.text).findAll('a')
    if not links:
        exit_with("Leaf link \"{}\" is not a video.".format(link))

    choice, _ = process.extractOne(
        search_terms, links,
        lambda l: normalize(l.string),
        fuzz.token_set_ratio
    )

    link = urljoin(base, choice.get('href'))
program.append(link)
call(program)
