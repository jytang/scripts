#!/usr/bin/env bash
# Fetch info about your system
#
# Created by Dylan Araps
# https://github.com/dylanaraps/dotfiles/
# Modified by Ethan Chan
# https://github.com/metakirby5/dotfiles/

# File to source
# Can contain:
#   export TITLE=text
#   export PRIMARY_N=0-7
#   export SECONDARY_N=0-7
#   export IMGSRC=/path/to/img
#   export IMGTEMPDIR=/some/temp/path
#   export CHARHEIGHT=number
#   export ADDITIONAL_PADDING=number
fetch_config=~/.config/fetch/config

# Format: ["position:title"]="info"
# Any title without a position is alphabetically ordered afterwards.
declare -A info=(
    ["1:OS"]="$(cat /etc/*ease | awk -F= '/^NAME=/{ print $2 }')"
    ["2:Kernel"]="$(uname -r)"
    ["3:Uptime"]="$(uptime -p | sed 's/ou\|ute//g')"
    ["4:Shell"]="$SHELL"
    ["5:Window Manager"]="$(wmctrl -m | awk '/^Name:/{ print $2}')"
    ["6:CPU"]="$(cat /proc/cpuinfo |\
      awk -F: '/^model name/ { print $2; exit }')"
    ["7:Speed"]="$(lscpu |\
      awk -F: '/^CPU MHz:/ { print "scale=1;" $2 "/ 1000" }' | bc -l)GHz"
    ["8:Memory"]="$(free -m | awk '/^Mem:/ { print $3 "/" $2 " MB" }')"
    ["9:Font"]="$(xrdb -q | awk -F: '/font/{ print $3; exit }')"
    ["10:Song"]="$(mpc current)"
    ["11:Waifu"]="Black Rock Shooter"
)

# === DO NOT EDIT BELOW THIS LINE ===

[ -f "$fetch_config" ] && source "$fetch_config"

# Defaults
title="${TITLE:="$(whoami)"}"
primary_n="${PRIMARY_N:=1}"
secondary_n="${SECONDARY_N:=4}"
imgsrc="${IMGSRC:="$(cat ~/.fehbg | cut -d\' -f2)"}"
imgtempdir="${IMGTEMPDIR:=/tmp/fetch/}"
charheight="${CHARHEIGHT:=31}"
charwidth="${CHARWIDTH:="$(($charheight / 2))"}"
additional_padding="${ADDITIONAL_PADDING:=3}"

# Colors
primary="$(tput setaf $primary_n)"
secondary="$(tput setaf $secondary_n)"
black="$(tput setaf 0)"
bold="$(tput bold)"
clear="$(tput sgr0)"

put_color_header() {
    local text
    for i in `seq 0 7`; do
        case "$i" in
            "$primary_n")     text=' .. ' ;;
            "$secondary_n")   text=' __ ' ;;
            *)                text='    ' ;;
        esac

        echo -n "$(tput setaf $i)$bold$text$clear "
    done
}

put_colors() {
    for i in `seq $1 $2`; do
        echo -n "$(tput setab $i)    $clear "
    done
}

# Calculate sizing info
# title + underline + 3 lines of color info = 5
numlines="$((${#info[@]} + 5))"
isize="$(($numlines * $charheight))"
pad="$(printf "%$(($isize / $charwidth + 1))s")" # +1 for padding

# Prepare the image
img="$imgtempdir/$(basename $imgsrc)"
if [ ! -f "$img" ]; then
    [ ! -d "$imgtempdir" ] && (mkdir "$imgtempdir" || exit)
    wsize="$(identify -format '%h' $imgsrc 2>/dev/null)"
    convert "$imgsrc" -crop "$wsize"x"$wsize"+0+0 -gravity center "$img" \
      &>/dev/null
fi

# Order and format the info
underline="$(printf "%${#title}s" | tr ' ' '=')="
output=''
tab="$(echo -e '\t')" # We use this to separate the key
for k in "${!info[@]}"; do
    # Higher priority if colon
    [[ "$k" == *:* ]] && priority="0" || priority='1'
    output="$output
$priority${k%%:*}$tab$pad$bold$secondary${k#*:}$clear: ${info[$k]}"
done
output="$(echo "$output" | sort -n | tail -n+2 | sed "s/^.\+$tab//")"

# Print info
clear
tput civis
echo "$pad$bold$primary$title$clear"
echo "$pad$bold$black$underline"
echo "$output"
echo "$pad$(put_color_header)"
echo "$pad$(put_colors 0 7)"
echo "$pad$(put_colors 8 15)"
echo -e "0;1;$xoffset;$yoffset;$isize;$isize;;;;;$img\n4;\n3;" |\
  /usr/lib/w3m/w3mimgdisplay
tput cnorm

